name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - develop
  workflow_dispatch: {}

jobs:
  snapshot:
    name: Snapshot (test goreleaser)
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || startsWith(github.ref, 'refs/heads/')
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/.cache/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Install goreleaser (install only)
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          install-only: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Validate goreleaser config
        run: goreleaser check --config .goreleaser.yml
      - name: Login to GHCR (for buildx/cache during snapshot)
        if: ${{ secrets.GHCR_TOKEN != '' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Run goreleaser (snapshot)
        run: goreleaser release --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release (tag)
    runs-on: ubuntu-latest
    needs: snapshot
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/.cache/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Install goreleaser (install only)
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          install-only: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to GHCR
        if: ${{ secrets.GHCR_TOKEN != '' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Set up QEMU (for multi-arch builds)
        if: ${{ secrets.GHCR_TOKEN != '' }}
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        if: ${{ secrets.GHCR_TOKEN != '' }}
        uses: docker/setup-buildx-action@v3
      - name: Restore buildx cache from GHCR
        if: ${{ secrets.GHCR_TOKEN != '' }}
        uses: docker/build-push-action@v6
        with:
          load: false
          cache-from: "type=registry,ref=ghcr.io/${{ github.repository }}:buildx-cache"
      - name: Export GHCR_TOKEN for goreleaser
        if: ${{ secrets.GHCR_TOKEN != '' }}
        run: echo "GHCR_TOKEN=${{ secrets.GHCR_TOKEN }}" >> $GITHUB_ENV
      - name: Run goreleaser (release)
        run: goreleaser release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
      - name: Save buildx cache to GHCR
        if: ${{ secrets.GHCR_TOKEN != '' }}
        uses: docker/build-push-action@v6
        with:
          push: true
          cache-to: "type=registry,ref=ghcr.io/${{ github.repository }}:buildx-cache,mode=max"
